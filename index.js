import dotenv from "dotenv";
import { Telegraf } from "telegraf";
import OpenAI from "openai";

dotenv.config();

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

const openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY,
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏
const getWeather = async (city) => {
    const apiKey = process.env.OPENWEATHER_API_KEY;
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${encodeURIComponent(
        city
    )}&appid=${apiKey}&units=metric&lang=ua`;

    const response = await fetch(url);
    if (!response.ok) {
        throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –ø–æ–≥–æ–¥—É");
    }

    const data = await response.json();

    return `üå§ –ü–æ–≥–æ–¥–∞ —É –º—ñ—Å—Ç—ñ ${data.name}, ${data.sys.country}:
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${data.main.temp}¬∞C
–í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: ${data.main.feels_like}¬∞C
–ü–æ–≥–æ–¥–∞: ${data.weather[0].description}
–í–æ–ª–æ–≥—ñ—Å—Ç—å: ${data.main.humidity}%
–í—ñ—Ç–µ—Ä: ${data.wind.speed} –º/—Å`;
};

bot.start((ctx) => {
    ctx.reply("–ü—Ä–∏–≤—ñ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É, –∞–±–æ –∑–∞–ø–∏—Ç–∞–π –º–µ–Ω–µ —â–æ—Å—å —ñ–Ω—à–µ.");
});

bot.on("text", async (ctx) => {
    const userText = ctx.message.text;

    if (/–ø–æ–≥–æ–¥–∞|weather/i.test(userText)) {
        ctx.reply("üåç –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: `–õ—å–≤—ñ–≤`).");
        return;
    }

    try {
        const weather = await getWeather(userText);
        ctx.reply(weather);
    } catch (err) {
        console.log("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –º—ñ—Å—Ç–æ, –ø—Ä–æ–±—É—î–º–æ GPT...");

        try {
            const completion = await openai.chat.completions.create({
                model: "gpt-4o-mini",
                messages: [{ role: "user", content: userText }],
            });

            const reply = completion.choices[0].message.content;
            ctx.reply(reply);
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ GPT:", error);
            ctx.reply("–í–∏–±–∞—á, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.");
        }
    }
});

bot.launch();
console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...");